一、vue 项目搭建流程
1. 全局安装vue和vue-cli,
    npm i @vue/cli -g
2. 使用脚手架新建项目
    vue create xxx
3. 构建项目环境
    Babel
    Router              路由管理器
    CSS Pre-processors  css预编译工具
    Linter / Formatter  代码风格、格式校验
4. 启动服务
    npm run serve
5. 删除不必要的组件文件,保留app.vue根组件就行

6. main.js入口文件引入样式重置文件 -> ./assets/reset.less
    如果是手机端开发，可以定义一个mixin.less文件，引入到reset.less中，可以全局使用。

7. 启动服务器
    进入到vue_api_server文件夹，shift+右键打开powershell里面运行node ./app.js

8. 引入elementUI组件
    npm i element-ui -s(全局导入)
    按需导入-按照官方指引来
    新建plugins文件夹，放置element-ui按需引入的组件文件elementui.js

二、login页面搭建及功能实现
    ### bug1：input框无法输入
        原理：element-ui的输入框不支持v-model修饰符，也就是不能写成:model这种简写
     
    > login登录之后，进入home页面，存储sessionStorage
        window.sessionStorage.setItem("token", res.data.token);

    > 点击退出按钮，清除session记录，退回到login页面
        window.sessionStorage.clear();

三、home主页搭建及功能实现
    > 请求左侧菜单列表数据，设置请求携带token访问
        axios.interceptors.request.use(config => {
        // 为所有请求设置请求头对象，添加token验证的Authorizaion字段
        config.headers.Authorization = window.sessionStorage.getItem('token')
        return config
        })
    > v-for 遍历菜单列表，渲染页面
    > 注意左侧菜单栏点击实现路由跳转和用户导航栏输入路由双向映射，展开当前的父菜单




